export default class CustomElement extends HTMLElement {
    static styles: string;
    static props: {};
    /**
     * Update the element with a new property and value.
     * @param {string} prop - The name of the property to update.
     * @param {*} value - The new value for the property.
     * @return {void}
     */
    attributeUpdated(prop: string, value: any): void;
    /**
     * Convert attribute name to property name
     * @param {string} name Attribute name
     * @return {string} Property name
     */
    _attrNameToProp(name: string): string;
    /**
     * Convert property name to attribute name
     * @param {string} name Property name
     * @return {string} Attribute name
     */
    _propToAttrName(name: string): string;
    /**
     * Convert attribute value to property value
     * @param {string} name Attribute name
     * @param {(string|null)} value Attribute value
     * @return Property value
     */
    _attrValToProp(name: string, value: (string | null)): string | boolean;
    attributeChangedCallback(name: any, _: any, newValue: any): void;
    reflectPropToAttribute(prop: any): void;
    #private;
}
