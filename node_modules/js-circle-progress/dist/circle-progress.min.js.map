{"version":3,"file":"circle-progress.min.js","sources":["../src/custom-element.js","../src/svgpaper.js","../src/animator.js","../src/util.js","../src/circle-progress.js","../src/styles.js"],"sourcesContent":["export default class CustomElement extends HTMLElement {\n\tstatic styles = ''\n\tstatic props = {}\n\n\t// A map of property names to attribute names\n\t#propToAttrDict = {}\n\t// A map of attribute names to property names\n\t#attrToPropDict = {}\n\n\t#boolProps = new Set()\n\n\tconstructor() {\n\t\tsuper()\n\t\tconst shadowRoot = this.attachShadow({ mode: 'open' })\n\n\t\t// @ts-ignore\n\t\tconst {styles} = this.constructor\n\t\tif (styles) {\n\t\t\tconst style = document.createElement('style')\n\t\t\tstyle.textContent = styles\n\t\t\tshadowRoot.append(style)\n\t\t}\n\n\t\t// @ts-ignore\n\t\tconst {props} = this.constructor\n\t\tif (props) {\n\t\t\tfor (const [prop, config] of Object.entries(props)) {\n\t\t\t\tif (config.attribute) {\n\t\t\t\t\tthis.#propToAttrDict[prop] = config.attribute\n\t\t\t\t\tthis.#attrToPropDict[config.attribute] = prop\n\t\t\t\t}\n\t\t\t\tif (config.type === Boolean) {\n\t\t\t\t\tthis.#boolProps.add(prop)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update the element with a new property and value.\n\t * @param {string} prop - The name of the property to update.\n\t * @param {*} value - The new value for the property.\n\t * @return {void}\n\t */\n\t// @ts-ignore\n\tattributeUpdated(prop, value) {}\n\n\t/**\n\t * Convert attribute name to property name\n\t * @param {string} name Attribute name\n\t * @return {string} Property name\n\t */\n\t_attrNameToProp(name) {\n\t\treturn this.#attrToPropDict[name] ?? name\n\t}\n\n\t/**\n\t * Convert property name to attribute name\n\t * @param {string} name Property name\n\t * @return {string} Attribute name\n\t */\n\t_propToAttrName(name) {\n\t\treturn this.#propToAttrDict[name] ?? name\n\t}\n\n\t/**\n\t * Convert attribute value to property value\n\t * @param {string} name Attribute name\n\t * @param {(string|null)} value Attribute value\n\t * @return Property value\n\t */\n\t_attrValToProp(name, value) {\n\t\tif (this.#boolProps.has(name)) {\n\t\t\treturn value !== null\n\t\t}\n\t\treturn value\n\t}\n\n\t#bailOutAttrUpdate = false\n\n\tattributeChangedCallback(name, _, newValue) {\n\t\tif (this.#bailOutAttrUpdate) {\n\t\t\tthis.#bailOutAttrUpdate = false\n\t\t\treturn\n\t\t}\n\t\tthis.attributeUpdated?.(this._attrNameToProp(name), this._attrValToProp(name, newValue))\n\t}\n\n\treflectPropToAttribute(prop) {\n\t\tconst value = this[prop]\n\t\tthis.#bailOutAttrUpdate = true\n\t\tconst attr = this._propToAttrName(prop)\n\t\tif (this.#boolProps.has(prop)) {\n\t\t\tif (value) {\n\t\t\t\tthis.setAttribute(attr, '')\n\t\t\t} else {\n\t\t\t\tthis.removeAttribute(attr)\n\t\t\t}\n\t\t} else if (typeof value === 'function') {\n\t\t\tthis.removeAttribute(attr)\n\t\t} else {\n\t\t\tthis.setAttribute(attr, String(value))\n\t\t}\n\t}\n}\n","/**\n * Create new paper holding a new SVG element\n * @param  {(HTMLElement|ShadowRoot|string)} container      Container element or selector string\n * @param  {(number|string)}      width          SVG width\n * @param  {(number|string)}      height         SVG height\n * @param  {Document}             [doc=document] HTML document. Defaults to current document\n * @return {Object}                              The paper\n */\nconst paper = function(container, width, height, doc) {\n\tdoc = doc || document;\n\n\tconst me = Object.create(paperProto);\n\n\tif(typeof container === 'string') {\n\t\tcontainer = /** @type {HTMLElement} */ (doc.querySelector(container));\n\t}\n\n\tif(!container) {\n\t\treturn;\n\t}\n\n\tconst svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\tsvg.setAttribute('version', '1.1');\n\tif(width) svg.setAttribute('width', String(width));\n\tif(height) svg.setAttribute('height', String(height));\n\tif(width && height) svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n\tcontainer.appendChild(svg);\n\n\tme.svg = svg;\n\treturn me;\n};\n\nconst paperProto = {\n\t/**\n\t * Create a new SVG element\n\t * @param  {string}     name      Element name\n\t * @param  {Object}     attrs     Map of attributes\n\t * @param  {string}     content   Element content\n\t * @param  {SVGElement} [parent]  An element to append to. Defaults to the root SVG element\n\t * @return {object}               Element\n\t */\n\telement: function(name, attrs, content, parent) {\n\t\tconst el = element(this, name, attrs, parent);\n\t\tif(content) el.el.innerHTML = content;\n\n\t\treturn el;\n\t},\n};\n\n/**\n * General purpose element maker\n * @param  {Object}     paper    SVG Paper\n * @param  {string}     name     Element tag name\n * @param  {Object}     attrs    Attributes for the element\n * @param  {SVGElement|{el:SVGAElement}} [parent] Another SVG Element to append to\n * @param  {Document}   [doc]    Document\n * @return {Object}              Element\n */\nconst element = function(paper, name, attrs, parent, doc) {\n\tdoc = doc || document;\n\n\tconst me = Object.create(elementProto);\n\n\tme.el = doc.createElementNS('http://www.w3.org/2000/svg', name);\n\tme.attr(attrs);\n\n\t(parent ? ('el' in parent ? parent.el : parent) : paper.svg).appendChild(me.el);\n\n\treturn me;\n};\n\nconst elementProto = {\n\t/**\n\t * Set an attribute to a value\n\t * @param  {string} name  Attribute name\n\t * @param  {*}      value Attribute value\n\t * @return {object}       The element\n\t *//**\n\t * Set attributes\n\t * @param {object} name  Map of name - values\n\t * @return {object}       The element\n\t */\n\tattr: function(name, value) {\n\t\tif(name === undefined) return this;\n\t\tif(typeof name === 'object') {\n\t\t\tfor(let key in name) {\n\t\t\t\tthis.attr(key, name[key]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif(value === undefined)\n\t\t\treturn this.el.getAttributeNS(null, name);\n\t\tthis.el.setAttribute(name, value);\n\t\treturn this;\n\t},\n\t/**\n\t * Set content (innerHTML) for the element\n\t * @param  {string} content String of SVG\n\t * @return {object}         The element\n\t */\n\tcontent: function(content) {\n\t\tthis.el.innerHTML = content;\n\t\treturn this;\n\t}\n};\n\nexport default paper\n","/**\n * Change any value using an animation easing function.\n * @param  {string}   easing Easing function.\n * @param  {number}   startValue The initial value\n * @param  {number}   valueChange Change in value\n * @param  {number}   dur Animation duration\n * @param  {Function} cb Callback to be called on each iteration. The callback is passed one argument: current value.\n * @return {Object}   Object with cancel method to stop the animation.\n */\nconst animator = function(easing, startValue, valueChange, dur, cb) {\n\tconst easeFunc = typeof easing === 'string' ? easings[easing] : easing;\n\tlet tStart;\n\tlet animHandle;\n\n\tconst frame = function(t) {\n\t\tif(!tStart) tStart = t;\n\t\tt -= tStart;\n\t\tt = Math.min(t, dur);\n\t\tconst curVal = easeFunc(t, startValue, valueChange, dur);\n\t\tcb(curVal);\n\t\tif(t < dur) animHandle = requestAnimationFrame(frame);\n\t\telse cb(startValue + valueChange);\n\t};\n\n\tanimHandle = requestAnimationFrame(frame);\n\n\treturn {\n\t\tcancel: () => {\n\t\t\tcancelAnimationFrame(animHandle);\n\t\t}\n\t}\n};\n\nexport default animator;\n\n\n/**\n * Map of easings' strings to functions\n * Easing functions from http://gizma.com/easing/\n * @type {Object}\n */\nexport const easings = {\n\tlinear:  function (t, b, c, d) {\n\t\treturn c*t/d + b;\n\t},\n\n\teaseInQuad: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn c*t*t + b;\n\t},\n\teaseOutQuad: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn -c * t*(t-2) + b;\n\t},\n\teaseInOutQuad: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return c/2*t*t + b;\n\t\tt--;\n\t\treturn -c/2 * (t*(t-2) - 1) + b;\n\t},\n\n\teaseInCubic: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn c*t*t*t + b;\n\t},\n\teaseOutCubic: function (t, b, c, d) {\n\t\tt /= d;\n\t\tt--;\n\t\treturn c*(t*t*t + 1) + b;\n\t},\n\teaseInOutCubic: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return c/2*t*t*t + b;\n\t\tt -= 2;\n\t\treturn c/2*(t*t*t + 2) + b;\n\t},\n\n\teaseInQuart: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn c*t*t*t*t + b;\n\t},\n\teaseOutQuart: function (t, b, c, d) {\n\t\tt /= d;\n\t\tt--;\n\t\treturn -c * (t*t*t*t - 1) + b;\n\t},\n\teaseInOutQuart: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return c/2*t*t*t*t + b;\n\t\tt -= 2;\n\t\treturn -c/2 * (t*t*t*t - 2) + b;\n\t},\n\n\teaseInQuint: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn c*t*t*t*t*t + b;\n\t},\n\teaseOutQuint: function (t, b, c, d) {\n\t\tt /= d;\n\t\tt--;\n\t\treturn c*(t*t*t*t*t + 1) + b;\n\t},\n\teaseInOutQuint: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return c/2*t*t*t*t*t + b;\n\t\tt -= 2;\n\t\treturn c/2*(t*t*t*t*t + 2) + b;\n\t},\n\n\teaseInSine: function (t, b, c, d) {\n\t\treturn -c * Math.cos(t/d * (Math.PI/2)) + c + b;\n\t},\n\teaseOutSine: function (t, b, c, d) {\n\t\treturn c * Math.sin(t/d * (Math.PI/2)) + b;\n\t},\n\teaseInOutSine: function (t, b, c, d) {\n\t\treturn -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;\n\t},\n\n\teaseInExpo: function (t, b, c, d) {\n\t\treturn c * Math.pow( 2, 10 * (t/d - 1) ) + b;\n\t},\n\teaseOutExpo: function (t, b, c, d) {\n\t\treturn c * ( -Math.pow( 2, -10 * t/d ) + 1 ) + b;\n\t},\n\teaseInOutExpo: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return c/2 * Math.pow( 2, 10 * (t - 1) ) + b;\n\t\tt--;\n\t\treturn c/2 * ( -Math.pow( 2, -10 * t) + 2 ) + b;\n\t},\n\n\teaseInCirc: function (t, b, c, d) {\n\t\tt /= d;\n\t\treturn -c * (Math.sqrt(1 - t*t) - 1) + b;\n\t},\n\teaseOutCirc: function (t, b, c, d) {\n\t\tt /= d;\n\t\tt--;\n\t\treturn c * Math.sqrt(1 - t*t) + b;\n\t},\n\teaseInOutCirc: function (t, b, c, d) {\n\t\tt /= d/2;\n\t\tif (t < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;\n\t\tt -= 2;\n\t\treturn c/2 * (Math.sqrt(1 - t*t) + 1) + b;\n\t},\n};\n","// Utility functions\n// Mathematical functions\n\n/**\n * Convert polar coordinates (radius, angle) to cartesian ones (x, y)\n * @param  {number} r      Radius\n * @param  {number} angle  Angle\n * @return {object}       Cartesian coordinates as object: {x, y}\n */\nexport const polarToCartesian = (r, angle) => ({\n\tx: r * Math.cos(angle * Math.PI / 180),\n\ty: r * Math.sin(angle * Math.PI / 180),\n})\n\n/**\n * Make sector path for use in the \"d\" path attribute\n * @private\n * @param  {number} cx         Center x\n * @param  {number} cy         Center y\n * @param  {number} r          Radius\n * @param  {number} startAngle Start angle relative to straight upright axis\n * @param  {number} angle      Angle to rotate relative to straight upright axis\n * @param  {boolean}  clockwise  Direction of rotation. Clockwise if truethy, anticlockwise if falsy\n * @return {string}           Path string\n */\nexport const makeSectorPath = (cx, cy, r, startAngle, angle, clockwise = false) => {\n\tif(angle > 0 && angle < 0.3) {\n\t\t// Tiny angles smaller than ~0.3° can produce weird-looking paths\n\t\tangle = 0\n\t} else if(angle > 359.999) {\n\t\t// If progress is full, notch it back a little, so the path doesn't become 0-length\n\t\tangle = 359.999\n\t}\n\tconst endAngle = startAngle + angle * (+clockwise * 2 - 1)\n\tconst startCoords = polarToCartesian(r, startAngle)\n\tconst endCoords = polarToCartesian(r, endAngle)\n\tconst x1 = cx + startCoords.x\n\tconst x2 = cx + endCoords.x\n\tconst y1 = cy + startCoords.y\n\tconst y2 = cy + endCoords.y\n\n\treturn [\"M\", x1, y1, \"A\", r, r, 0, +(angle > 180), +clockwise, x2, y2].join(' ')\n}\n","/**\n * @author Tigran Sargsyan <tigran.sn@gmail.com>\n */\n\nimport CustomElement from './custom-element.js';\nimport svgpaper from './svgpaper.js';\nimport animator, {\n\teasings,\n} from './animator.js';\nimport {polarToCartesian, makeSectorPath} from './util.js';\nimport styles from './styles.js';\n\nconst ariaAttrs = {value: 'aria-valuenow', min: 'aria-valuemin', max: 'aria-valuemax'};\n\n\n/**\n * Create a new Circle Progress bar\n * @class Circle Progress class\n */\nclass CircleProgress extends CustomElement {\n\tstatic styles = styles\n\n\t/**\n\t * @type {number} Current value\n\t */\n\tvalue\n\n\t/**\n\t * @type {number} Minimum value\n\t * @default 0\n\t */\n\tmin\n\n\t/**\n\t * @type {number} Maximum value\n\t * @default 1\n\t */\n\tmax\n\n\t/**\n\t * @type {number} Start angle\n\t * @default 0\n\t */\n\tstartAngle\n\n\t/**\n\t * @type {boolean} Whether to draw the circle anticlockwise\n\t * @default false\n\t */\n\tanticlockwise\n\n\t/**\n\t * @type {boolean} Whether to allow values outside of the min-max range\n\t * @default false\n\t */\n\tunconstrained\n\n\t/**\n\t * @type {string} Text to display when the value is indeterminate\n\t * @default '?'\n\t */\n\tindeterminateText\n\n\t/**\n\t * @type {string|Function} Text format\n\t * @default 'horizontal'\n\t */\n\ttextFormat\n\n\t/**\n\t * @type {string} Animation easing function\n\t * @default 'easeInOutCubic'\n\t */\n\tanimation\n\n\t/**\n\t * @type {number} Animation duration in milliseconds\n\t * @default 600\n\t */\n\tanimationDuration\n\n\tstatic props = {\n\t\tvalue: true,\n\t\tmin: true,\n\t\tmax: true,\n\t\tstartAngle: {attribute: 'start-angle'},\n\t\tanticlockwise: {type: Boolean},\n\t\tunconstrained: {type: Boolean},\n\t\tindeterminateText: {attribute: 'indeterminate-text'},\n\t\ttextFormat: {attribute: 'text-format'},\n\t\tanimation: true,\n\t\tanimationDuration: {attribute: 'animation-duration'},\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn Object.entries(this.props).map(\n\t\t\t([name, config]) => (config && typeof config === 'object' && config.attribute) || name\n\t\t)\n\t}\n\n\tstatic defaults = {\n\t\tstartAngle: 0,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tunconstrained: false,\n\t\tindeterminateText: '?',\n\t\tanticlockwise: false,\n\t\ttextFormat: 'horizontal',\n\t\tanimation: 'easeInOutCubic',\n\t\tanimationDuration: 600\n\t}\n\n\t/**\n\t * Construct the new CircleProgress instance\n\t * @constructs\n\t * @param {Object}                opts  Options\n\t */\n\tconstructor(opts = {}) {\n\t\tsuper();\n\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\tObject.keys(CircleProgress.props).reduce(\n\t\t\t\t(descriptors, prop) => {\n\t\t\t\t\tdescriptors[prop] = {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\treturn this._get(prop);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset(val) {\n\t\t\t\t\t\t\tthis.attr(prop, val);\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t\treturn descriptors;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t)\n\t\t);\n\n\t\tlet circleThickness;\n\n\t\topts = {...CircleProgress.defaults, ...opts};\n\n\t\tcircleThickness = opts.textFormat === 'valueOnCircle' ? 16 : 8;\n\n\t\tthis.graph = {\n\t\t\tpaper: svgpaper(this.shadowRoot, 100, 100),\n\t\t\tvalue: 0,\n\t\t};\n\t\tthis.graph.paper.svg.setAttribute('class', 'base');\n\t\tthis.graph.paper.svg.setAttribute('part', 'base');\n\t\tthis.graph.paper.svg.setAttribute('role', 'progressbar');\n\t\tthis.graph.circle = this.graph.paper.element('circle').attr({\n\t\t\tclass: 'circle',\n\t\t\tpart: 'circle',\n\t\t\tcx: 50,\n\t\t\tcy: 50,\n\t\t\tr: 50 - circleThickness / 2,\n\t\t\t'stroke-width': circleThickness,\n\t\t});\n\t\tthis.graph.sector = this.graph.paper.element('path').attr({\n\t\t\td: makeSectorPath(50, 50, 50 - circleThickness / 2, 0, 0),\n\t\t\tclass: 'value',\n\t\t\tpart: 'value',\n\t\t\t'stroke-width': circleThickness,\n\t\t});\n\t\tthis.graph.text = this.graph.paper.element('text', {\n\t\t\tclass: 'text',\n\t\t\tpart: 'text',\n\t\t\tx: 50,\n\t\t\ty: 50,\n\t\t});\n\t\tthis._initText();\n\t\tObject.keys(CircleProgress.props)\n\t\t\t.forEach(key => key in opts && this._set(key, opts[key]));\n\t}\n\n\t// Called from CustomElement whenever attribute is changed\n\tattributeUpdated(name, newValue) {\n\t\tthis._set(name, newValue)\n\t}\n\n\t#attrs = {}\n\n\n\t/**\n\t * Set attributes\n\t * @param  {(Array|Object)} attrs Attributes as an array [[key,value],...] or map {key: value,...}\n\t * @return {CircleProgress}       The CircleProgress instance\n\t */\n\tattr(attrs) {\n\t\tif(!['string', 'object'].includes(typeof attrs)) {\n\t\t\tthrow new TypeError(`Wrong argument passed to attr. Expected object, got \"${typeof attrs}\"`);\n\t\t}\n\n\t\tif(typeof attrs === 'string') {\n\t\t\tif(arguments.length === 1) {\n\t\t\t\treturn this._get(attrs);\n\t\t\t}\n\t\t\tattrs = [[attrs, arguments[1]]];\n\t\t}\n\n\t\tif(!Array.isArray(attrs)) {\n\t\t\tattrs = Object.keys(attrs).map(key => [key, attrs[key]]);\n\t\t}\n\n\t\tattrs.forEach(([key, value]) => this._set(key, value));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get property value\n\t * Flushes pending updates.\n\t */\n\t_get(key) {\n\t\tthis._flushBatch();\n\t\treturn this.#attrs[key];\n\t}\n\n\n\t/**\n\t * Set an attribute to a value\n\t * @param {string} key Attribute name\n\t * @param {*}      val Attribute value\n\t * @return {false|void} false if the value is the same as the current one, void otherwise\n\t */\n\t_set(key, val) {\n\t\tval = this._formatValue(key, val);\n\t\tif(val === undefined) throw new TypeError(`Failed to set the ${key} property on CircleProgress: The provided value is non-finite.`);\n\t\tthis._scheduleUpdate(key, val);\n\t}\n\n\t/**\n\t * Properties batched for update\n\t */\n\t#batch = null;\n\n\t/**\n\t * A promise that resolves when the element has finished updating\n\t */\n\tupdateComplete = null;\n\n\t/**\n\t * Schedule an update of a property on microtask level\n\t * @param  {string} key Property name\n\t * @param  {*}      val Property value\n\t */\n\t_scheduleUpdate(key, val) {\n\t\tif(!this.#batch) {\n\t\t\tthis.#batch = {};\n\t\t\tthis.updateComplete = Promise.resolve().then(() => this._flushBatch());\n\t\t}\n\t\tthis.#batch[key] = val;\n\t}\n\n\t_flushBatch() {\n\t\tif (!this.#batch) {\n\t\t\treturn;\n\t\t}\n\t\tconst batch = this.#batch;\n\t\tthis.#batch = null;\n\n\t\tlet min = batch.min ?? this.#attrs.min;\n\t\tlet max = batch.max ?? this.#attrs.max;\n\n\t\tif('min' in batch && batch.min >= max) {\n\t\t\tmin = batch.min = max;\n\t\t}\n\t\tif('max' in batch && batch.max <= min) {\n\t\t\tmax = batch.max = min;\n\t\t}\n\t\tif('value' in batch && !(batch.unconstrained ?? this.#attrs.unconstrained)) {\n\t\t\tif(min != null && batch.value < min) batch.value = min;\n\t\t\tif(max != null && batch.value > max) batch.value = max;\n\t\t}\n\n\t\tfor (const [key, val] of Object.entries(batch)) {\n\t\t\tif(this.#attrs[key] === val) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.#attrs[key] = val;\n\t\t\tif(key in ariaAttrs) {\n\t\t\t\tif(val !== undefined) this.graph.paper.svg.setAttribute(ariaAttrs[key], val);\n\t\t\t\telse this.graph.paper.svg.removeAttribute(ariaAttrs[key]);\n\t\t\t}\n\t\t\tif(['min', 'max', 'unconstrained'].includes(key) && (this.value > this.max || this.value < this.min)) {\n\t\t\t\tthis.value = Math.min(this.max, Math.max(this.min, this.value));\n\t\t\t}\n\t\t\tif(key === 'textFormat') {\n\t\t\t\tthis._initText();\n\t\t\t\tconst circleThickness = val === 'valueOnCircle' ? 16 : 8;\n\t\t\t\tthis.graph.sector.attr('stroke-width', circleThickness);\n\t\t\t\tthis.graph.circle.attr('stroke-width', circleThickness);\n\t\t\t}\n\t\t\tthis.reflectPropToAttribute(key);\n\t\t}\n\t\tthis.updateGraph();\n\t}\n\n\n\t/**\n\t * Format attribute value according to its type\n\t * @param  {string} key Attribute name\n\t * @param  {*}      val Attribute value\n\t * @return {*}          Formatted attribute value\n\t */\n\t_formatValue(key, val) {\n\t\tswitch(key) {\n\t\t\tcase 'value':\n\t\t\tcase 'min':\n\t\t\tcase 'max':\n\t\t\t\tval = Number(val);\n\t\t\t\tif(!Number.isFinite(val)) val = undefined;\n\t\t\t\tbreak;\n\t\t\tcase 'startAngle':\n\t\t\t\tval = Number(val);\n\t\t\t\tif(!Number.isFinite(val)) val = undefined;\n\t\t\t\telse val = Math.max(0, Math.min(360, val));\n\t\t\t\tbreak;\n\t\t\tcase 'anticlockwise':\n\t\t\tcase 'unconstrained':\n\t\t\t\tval = !!val;\n\t\t\t\tbreak;\n\t\t\tcase 'indeterminateText':\n\t\t\t\tval = String(val);\n\t\t\t\tbreak;\n\t\t\tcase 'textFormat':\n\t\t\t\tif(typeof val !== 'function' && !['valueOnCircle', 'horizontal', 'vertical', 'percent', 'value', 'none'].includes(val)) {\n\t\t\t\t\tthrow new Error(`Failed to set the \"textFormat\" property on CircleProgress: the provided value \"${val}\" is not a legal textFormat identifier.`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'animation':\n\t\t\t\tif(typeof val !== 'string' && typeof val !== 'function') {\n\t\t\t\t\tthrow new TypeError(`Failed to set \"animation\" property on CircleProgress: the value must be either string or function, ${typeof val} passed.`);\n\t\t\t\t}\n\t\t\t\tif(typeof val === 'string' && val !== 'none' && !easings[val]) {\n\t\t\t\t\tthrow new Error(`Failed to set \"animation\" on CircleProgress: the provided value ${val} is not a legal easing function name.`);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn val;\n\t}\n\n\n\t/**\n\t * Convert current value to angle\n\t * The caller is responsible to check if the state is not indeterminate.\n\t * This is done for optimization purposes as this method is called from within an animation.\n\t * @return {number} Angle in degrees\n\t */\n\t_valueToAngle(value = this.value) {\n\t\treturn Math.min(\n\t\t\t360,\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\t(value - this.min) / (this.max - this.min) * 360\n\t\t\t)\n\t\t);\n\t}\n\n\n\t/**\n\t * Check wether the progressbar is in indeterminate state\n\t * @return {boolean} True if the state is indeterminate, false if it is determinate\n\t */\n\t_isIndeterminate() {\n\t\treturn ['value', 'max', 'min'].some(key => typeof this[key] !== 'number');\n\t}\n\n\n\t/**\n\t * Position the value text on the circle\n\t * @param  {number} angle Angle at which to position the text\n\t * @param  {number} r Circle radius measured to the middle of the stroke\n\t *                   as returned by {@link CircleProgress.getRadius}, where text should be.\n\t *                   The radius is passed rather than calculated inside the function\n\t *                   for optimization purposes as this method is called from within an animation.\n\t */\n\t_positionValueText(angle, r) {\n\t\tconst coords = polarToCartesian(r, angle);\n\t\tthis.graph.textVal.attr({x: 50 + coords.x, y: 50 + coords.y});\n\t}\n\n\n\t/**\n\t * Generate text representation of the values based on {@link CircleProgress#textFormat}\n\t */\n\t_initText() {\n\t\tconst format = this.textFormat;\n\t\tthis.graph.text.content('');\n\t\tif (typeof format === 'string' && ['valueOnCircle', 'horizontal', 'vertical'].includes(format)) {\n\t\t\tthis.graph.textVal = this.graph.paper.element(\n\t\t\t\t'tspan',\n\t\t\t\t{class: 'text-value', part: 'text-value'},\n\t\t\t\t'',\n\t\t\t\tthis.graph.text,\n\t\t\t);\n\t\t\tif (['horizontal', 'vertical'].includes(format)) {\n\t\t\t\tthis.graph.textSeparator = this.graph.paper.element(\n\t\t\t\t\t'tspan',\n\t\t\t\t\t{class: 'text-separator', part: 'text-separator'},\n\t\t\t\t\t'',\n\t\t\t\t\tthis.graph.text,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.graph.textMax = this.graph.paper.element(\n\t\t\t\t'tspan',\n\t\t\t\t{class: 'text-max', part: 'text-max'},\n\t\t\t\t'',\n\t\t\t\tthis.graph.text,\n\t\t\t);\n\t\t}\n\t\tswitch(format) {\n\t\tcase 'valueOnCircle':\n\t\t\tthis.graph.textVal.attr({\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tdy: '0.4em',\n\t\t\t});\n\t\t\tthis.graph.textMax.attr({\n\t\t\t\tx: 50,\n\t\t\t\ty: 50,\n\t\t\t\tdy: '0.4em',\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase 'horizontal':\n\t\t\tthis.graph.textSeparator.content('/');\n\t\t\tbreak;\n\n\t\tcase 'vertical':\n\t\t\tthis.graph.textVal.attr({x: 50, dy: '-0.25em'});\n\t\t\tthis.graph.textSeparator.attr({x: 50, dy: '0.1em'}).content('___');\n\t\t\tthis.graph.textMax.attr({x: 50, dy: '1.2em'});\n\t\t\tbreak;\n\t\t}\n\t\tthis.graph.text.attr('dy', format === 'vertical' ? '' : '0.4em');\n\t}\n\n\t/**\n\t * @type {ReturnType<animator>|null} Animation\n\t */\n\t#animator = null\n\n\n\t/**\n\t * Update graphics\n\t */\n\tupdateGraph() {\n\t\tconst startAngle = this.startAngle - 90;\n\t\tconst r = this.getRadius();\n\n\t\tthis.#animator?.cancel()\n\t\tif(!this._isIndeterminate()) {\n\t\t\tconst clockwise = !this.anticlockwise;\n\t\t\tlet angle = this._valueToAngle();\n\t\t\tthis.graph.circle.attr('r', r);\n\t\t\tif(this.animation !== 'none' && this.value !== this.graph.value) {\n\t\t\t\tthis.#animator = animator(this.animation, this.graph.value, this.value - this.graph.value, this.animationDuration, value => {\n\t\t\t\t\tangle = this._valueToAngle(value);\n\t\t\t\t\tthis.graph.sector.attr('d', makeSectorPath(50, 50, r, startAngle, angle, clockwise));\n\t\t\t\t\tthis._updateText(value === this.value ? value : Math.round(value), (2 * startAngle + angle) / 2, r);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.graph.sector.attr('d', makeSectorPath(50, 50, r, startAngle, angle, clockwise));\n\t\t\t\tthis._updateText(this.value, (2 * startAngle + angle) / 2, r);\n\t\t\t}\n\t\t\tthis.graph.value = this.value;\n\t\t} else {\n\t\t\tthis._updateText(this.value, startAngle, r);\n\t\t}\n\t}\n\n\t/**\n\t * Update texts\n\t */\n\t_updateText(value, angle, r) {\n\t\tif(typeof this.textFormat === 'function') {\n\t\t\tthis.graph.text.content(this.textFormat(value, this.max));\n\t\t\treturn\n\t\t}\n\n\t\tswitch (this.textFormat) {\n\t\t\tcase 'value':\n\t\t\t\tthis.graph.text.el.textContent = (value !== undefined ? value : this.indeterminateText);\n\t\t\t\tbreak;\n\t\t\tcase 'percent':\n\t\t\t\tthis.graph.text.el.textContent = (value !== undefined && this.max != null ? Math.round(value / this.max * 100) : this.indeterminateText) + '%';\n\t\t\t\tbreak;\n\t\t\tcase 'none':\n\t\t\t\tthis.graph.text.el.textContent = '';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.graph.textVal.el.textContent = value !== undefined ? value : this.indeterminateText;\n\t\t\t\tthis.graph.textMax.el.textContent = this.max !== undefined ? this.max : this.indeterminateText;\n\t\t\t\tif(this.textFormat === 'valueOnCircle') {\n\t\t\t\t\tthis._positionValueText(angle, r);\n\t\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Get circles' radius based on the calculated stroke widths of the value path and circle\n\t * @return {number} The radius\n\t */\n\tgetRadius() {\n\t\treturn 50 - Math.max(\n\t\t\tthis._getStrokeWidth(this.graph.circle.el),\n\t\t\tthis._getStrokeWidth(this.graph.sector.el),\n\t\t) / 2;\n\t}\n\n\t/**\n\t * Get SVG element's stroke-width\n\t */\n\t_getStrokeWidth(el) {\n\t\treturn Number.parseFloat(this.ownerDocument.defaultView?.getComputedStyle(el)['stroke-width'] || 0);\n\t}\n}\n\n\ncustomElements.define('circle-progress', CircleProgress);\n\nexport default CircleProgress;\n","export default /* css */`\n\t:host(:not([hidden])) {\n\t\tdisplay: inline-block;\n\t}\n\n\t.circle {\n\t\tfill: none;\n\t\tstroke: #ddd;\n\t}\n\n\t.value {\n\t\tfill: none;\n\t\tstroke: #00E699;\n\t}\n\n\t.text {\n\t\tfont: 16px Arial, sans-serif;\n\t\ttext-anchor: middle;\n\t\tfill: #999;\n\t}\n\n\t:host([text-format=\"valueOnCircle\"]) .text-value {\n\t\tfont-size: 12px;\n\t\tfill: #fff;\n\t}\n\n\t:host([text-format=\"valueOnCircle\"]) .text-max {\n\t\tfont-size: 22px;\n\t\tfont-weight: bold;\n\t\tfill: #ddd;\n\t}\n\n\t:host([text-format=\"vertical\"]) .text-separator {\n\t\tfont-family: Arial, sans-serif !important;\n\t}\n`\n"],"names":["CustomElement","HTMLElement","static","propToAttrDict","attrToPropDict","boolProps","Set","constructor","super","shadowRoot","this","attachShadow","mode","styles","style","document","createElement","textContent","append","props","prop","config","Object","entries","attribute","type","Boolean","add","attributeUpdated","value","_attrNameToProp","name","_propToAttrName","_attrValToProp","has","bailOutAttrUpdate","attributeChangedCallback","_","newValue","reflectPropToAttribute","attr","setAttribute","removeAttribute","String","paper","container","width","height","doc","me","create","paperProto","querySelector","svg","createElementNS","appendChild","element","attrs","content","parent","el","innerHTML","elementProto","undefined","key","getAttributeNS","easings","linear","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","polarToCartesian","r","angle","x","y","makeSectorPath","cx","cy","startAngle","clockwise","endAngle","startCoords","endCoords","x1","x2","join","ariaAttrs","min","max","CircleProgress","anticlockwise","unconstrained","indeterminateText","textFormat","animation","animationDuration","observedAttributes","map","opts","circleThickness","defineProperties","keys","reduce","descriptors","get","_get","set","val","defaults","graph","svgpaper","circle","class","part","sector","text","_initText","forEach","_set","includes","TypeError","arguments","length","Array","isArray","_flushBatch","_formatValue","_scheduleUpdate","batch","updateComplete","Promise","resolve","then","updateGraph","Number","isFinite","Error","_valueToAngle","_isIndeterminate","some","_positionValueText","coords","textVal","format","textSeparator","textMax","dy","animator","getRadius","cancel","_updateText","easing","startValue","valueChange","dur","cb","easeFunc","tStart","animHandle","frame","curVal","requestAnimationFrame","cancelAnimationFrame","round","_getStrokeWidth","parseFloat","ownerDocument","defaultView","getComputedStyle","customElements","define"],"mappings":";;;;;;AAAe,MAAMA,UAAsBC,YAC1CC,cAAgB,GAChBA,aAAe,CAAE,EAGjBC,GAAkB,CAAE,EAEpBC,GAAkB,CAAE,EAEpBC,GAAa,IAAIC,IAEjBC,cACCC,QACA,MAAMC,EAAaC,KAAKC,aAAa,CAAEC,KAAM,UAGvCC,OAACA,GAAUH,KAAKH,YACtB,GAAIM,EAAQ,CACX,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,YAAcJ,EACpBJ,EAAWS,OAAOJ,EAClB,CAGD,MAAMK,MAACA,GAAST,KAAKH,YACrB,GAAIY,EACH,IAAK,MAAOC,EAAMC,KAAWC,OAAOC,QAAQJ,GACvCE,EAAOG,YACVd,MAAKP,EAAgBiB,GAAQC,EAAOG,UACpCd,MAAKN,EAAgBiB,EAAOG,WAAaJ,GAEtCC,EAAOI,OAASC,SACnBhB,MAAKL,EAAWsB,IAAIP,EAIvB,CASDQ,iBAAiBR,EAAMS,GAAS,CAOhCC,gBAAgBC,GACf,OAAOrB,MAAKN,EAAgB2B,IAASA,CACrC,CAODC,gBAAgBD,GACf,OAAOrB,MAAKP,EAAgB4B,IAASA,CACrC,CAQDE,eAAeF,EAAMF,GACpB,OAAInB,MAAKL,EAAW6B,IAAIH,GACN,OAAVF,EAEDA,CACP,CAEDM,IAAqB,EAErBC,yBAAyBL,EAAMM,EAAGC,GAC7B5B,MAAKyB,EACRzB,MAAKyB,GAAqB,EAG3BzB,KAAKkB,mBAAmBlB,KAAKoB,gBAAgBC,GAAOrB,KAAKuB,eAAeF,EAAMO,GAC9E,CAEDC,uBAAuBnB,GACtB,MAAMS,EAAQnB,KAAKU,GACnBV,MAAKyB,GAAqB,EAC1B,MAAMK,EAAO9B,KAAKsB,gBAAgBZ,GAC9BV,MAAKL,EAAW6B,IAAId,GACnBS,EACHnB,KAAK+B,aAAaD,EAAM,IAExB9B,KAAKgC,gBAAgBF,GAEK,mBAAVX,EACjBnB,KAAKgC,gBAAgBF,GAErB9B,KAAK+B,aAAaD,EAAMG,OAAOd,GAEhC,EC/FF,MAAMe,EAAQ,SAASC,EAAWC,EAAOC,EAAQC,GAChDA,EAAMA,GAAOjC,SAEb,MAAMkC,EAAK3B,OAAO4B,OAAOC,GAMzB,GAJwB,iBAAdN,IACTA,EAAwCG,EAAII,cAAcP,KAGvDA,EACH,OAGD,MAAMQ,EAAML,EAAIM,gBAAgB,6BAA8B,OAQ9D,OAPAD,EAAIZ,aAAa,UAAW,OACzBK,GAAOO,EAAIZ,aAAa,QAASE,OAAOG,IACxCC,GAAQM,EAAIZ,aAAa,SAAUE,OAAOI,IAC1CD,GAASC,GAAQM,EAAIZ,aAAa,UAAW,OAASK,EAAQ,IAAMC,GACvEF,EAAUU,YAAYF,GAEtBJ,EAAGI,IAAMA,EACFJ,CACR,EAEME,EAAa,CASlBK,QAAS,SAASzB,EAAM0B,EAAOC,EAASC,GACvC,MAAMC,EAAKJ,EAAQ9C,KAAMqB,EAAM0B,EAAOE,GAGtC,OAFGD,IAASE,EAAGA,GAAGC,UAAYH,GAEvBE,CACP,GAYIJ,EAAU,SAASZ,EAAOb,EAAM0B,EAAOE,EAAQX,GACpDA,EAAMA,GAAOjC,SAEb,MAAMkC,EAAK3B,OAAO4B,OAAOY,GAOzB,OALAb,EAAGW,GAAKZ,EAAIM,gBAAgB,6BAA8BvB,GAC1DkB,EAAGT,KAAKiB,IAEPE,EAAU,OAAQA,EAASA,EAAOC,GAAKD,EAAUf,EAAMS,KAAKE,YAAYN,EAAGW,IAErEX,CACR,EAEMa,EAAe,CAWpBtB,KAAM,SAAST,EAAMF,GACpB,QAAYkC,IAAThC,EAAoB,OAAOrB,KAC9B,GAAmB,iBAATqB,EAAmB,CAC5B,IAAI,IAAIiC,KAAOjC,EACdrB,KAAK8B,KAAKwB,EAAKjC,EAAKiC,IAErB,OAAOtD,IACP,CACD,YAAaqD,IAAVlC,EACKnB,KAAKkD,GAAGK,eAAe,KAAMlC,IACrCrB,KAAKkD,GAAGnB,aAAaV,EAAMF,GACpBnB,KACP,EAMDgD,QAAS,SAASA,GAEjB,OADAhD,KAAKkD,GAAGC,UAAYH,EACbhD,IACP,GC9DWwD,EAAU,CACtBC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,GAC3B,OAAOD,EAAEF,EAAEG,EAAIF,CACf,EAEDG,WAAY,SAAUJ,EAAGC,EAAGC,EAAGC,GAE9B,OAAOD,GADPF,GAAKG,GACMH,EAAIC,CACf,EACDI,YAAa,SAAUL,EAAGC,EAAGC,EAAGC,GAE/B,OAAQD,GADRF,GAAKG,IACUH,EAAE,GAAKC,CACtB,EACDK,cAAe,SAAUN,EAAGC,EAAGC,EAAGC,GAEjC,OADAH,GAAKG,EAAE,GACC,EAAUD,EAAE,EAAEF,EAAEA,EAAIC,GAEpBC,EAAE,KADVF,GACkBA,EAAE,GAAK,GAAKC,CAC9B,EAEDM,YAAa,SAAUP,EAAGC,EAAGC,EAAGC,GAE/B,OAAOD,GADPF,GAAKG,GACMH,EAAEA,EAAIC,CACjB,EACDO,aAAc,SAAUR,EAAGC,EAAGC,EAAGC,GAGhC,OAFAH,GAAKG,EAEED,KADPF,EACYA,EAAEA,EAAI,GAAKC,CACvB,EACDQ,eAAgB,SAAUT,EAAGC,EAAGC,EAAGC,GAElC,OADAH,GAAKG,EAAE,GACC,EAAUD,EAAE,EAAEF,EAAEA,EAAEA,EAAIC,EAEvBC,EAAE,IADTF,GAAK,GACSA,EAAEA,EAAI,GAAKC,CACzB,EAEDS,YAAa,SAAUV,EAAGC,EAAGC,EAAGC,GAE/B,OAAOD,GADPF,GAAKG,GACMH,EAAEA,EAAEA,EAAIC,CACnB,EACDU,aAAc,SAAUX,EAAGC,EAAGC,EAAGC,GAGhC,OAFAH,GAAKG,GAEGD,KADRF,EACeA,EAAEA,EAAEA,EAAI,GAAKC,CAC5B,EACDW,eAAgB,SAAUZ,EAAGC,EAAGC,EAAGC,GAElC,OADAH,GAAKG,EAAE,GACC,EAAUD,EAAE,EAAEF,EAAEA,EAAEA,EAAEA,EAAIC,GAExBC,EAAE,IADVF,GAAK,GACYA,EAAEA,EAAEA,EAAI,GAAKC,CAC9B,EAEDY,YAAa,SAAUb,EAAGC,EAAGC,EAAGC,GAE/B,OAAOD,GADPF,GAAKG,GACMH,EAAEA,EAAEA,EAAEA,EAAIC,CACrB,EACDa,aAAc,SAAUd,EAAGC,EAAGC,EAAGC,GAGhC,OAFAH,GAAKG,EAEED,KADPF,EACYA,EAAEA,EAAEA,EAAEA,EAAI,GAAKC,CAC3B,EACDc,eAAgB,SAAUf,EAAGC,EAAGC,EAAGC,GAElC,OADAH,GAAKG,EAAE,GACC,EAAUD,EAAE,EAAEF,EAAEA,EAAEA,EAAEA,EAAEA,EAAIC,EAE3BC,EAAE,IADTF,GAAK,GACSA,EAAEA,EAAEA,EAAEA,EAAI,GAAKC,CAC7B,EAEDe,WAAY,SAAUhB,EAAGC,EAAGC,EAAGC,GAC9B,OAAQD,EAAIe,KAAKC,IAAIlB,EAAEG,GAAKc,KAAKE,GAAG,IAAMjB,EAAID,CAC9C,EACDmB,YAAa,SAAUpB,EAAGC,EAAGC,EAAGC,GAC/B,OAAOD,EAAIe,KAAKI,IAAIrB,EAAEG,GAAKc,KAAKE,GAAG,IAAMlB,CACzC,EACDqB,cAAe,SAAUtB,EAAGC,EAAGC,EAAGC,GACjC,OAAQD,EAAE,GAAKe,KAAKC,IAAID,KAAKE,GAAGnB,EAAEG,GAAK,GAAKF,CAC5C,EAEDsB,WAAY,SAAUvB,EAAGC,EAAGC,EAAGC,GAC9B,OAAOD,EAAIe,KAAKO,IAAK,EAAG,IAAMxB,EAAEG,EAAI,IAAOF,CAC3C,EACDwB,YAAa,SAAUzB,EAAGC,EAAGC,EAAGC,GAC/B,OAAOD,GAAkC,EAA3Be,KAAKO,IAAK,GAAI,GAAKxB,EAAEG,IAAYF,CAC/C,EACDyB,cAAe,SAAU1B,EAAGC,EAAGC,EAAGC,GAEjC,OADAH,GAAKG,EAAE,GACC,EAAUD,EAAE,EAAIe,KAAKO,IAAK,EAAG,IAAMxB,EAAI,IAAOC,GACtDD,IACOE,EAAE,GAA+B,EAAxBe,KAAKO,IAAK,GAAI,GAAKxB,IAAWC,EAC9C,EAED0B,WAAY,SAAU3B,EAAGC,EAAGC,EAAGC,GAE9B,OADAH,GAAKG,GACGD,GAAKe,KAAKW,KAAK,EAAI5B,EAAEA,GAAK,GAAKC,CACvC,EACD4B,YAAa,SAAU7B,EAAGC,EAAGC,EAAGC,GAG/B,OAFAH,GAAKG,EACLH,IACOE,EAAIe,KAAKW,KAAK,EAAI5B,EAAEA,GAAKC,CAChC,EACD6B,cAAe,SAAU9B,EAAGC,EAAGC,EAAGC,GAEjC,OADAH,GAAKG,EAAE,GACC,GAAWD,EAAE,GAAKe,KAAKW,KAAK,EAAI5B,EAAEA,GAAK,GAAKC,GACpDD,GAAK,EACEE,EAAE,GAAKe,KAAKW,KAAK,EAAI5B,EAAEA,GAAK,GAAKC,EACxC,GCzIW8B,EAAmB,CAACC,EAAGC,KAAW,CAC9CC,EAAGF,EAAIf,KAAKC,IAAIe,EAAQhB,KAAKE,GAAK,KAClCgB,EAAGH,EAAIf,KAAKI,IAAIY,EAAQhB,KAAKE,GAAK,OActBiB,EAAiB,CAACC,EAAIC,EAAIN,EAAGO,EAAYN,EAAOO,GAAY,KACrEP,EAAQ,GAAKA,EAAQ,GAEvBA,EAAQ,EACCA,EAAQ,UAEjBA,EAAQ,SAET,MAAMQ,EAAWF,EAAaN,GAAsB,GAAZO,EAAgB,GAClDE,EAAcX,EAAiBC,EAAGO,GAClCI,EAAYZ,EAAiBC,EAAGS,GAChCG,EAAKP,EAAKK,EAAYR,EACtBW,EAAKR,EAAKM,EAAUT,EAI1B,MAAO,CAAC,IAAKU,EAHFN,EAAKI,EAAYP,EAGP,IAAKH,EAAGA,EAAG,IAAKC,EAAQ,MAAOO,EAAWK,EAFpDP,EAAKK,EAAUR,GAE6CW,KAAK,IAAG,EC7BhF,MAAMC,EAAY,CAACtF,MAAO,gBAAiBuF,IAAK,gBAAiBC,IAAK,iBAOtE,MAAMC,UAAuBtH,EAC5BE,cCpBuB,6lBDyBvB2B,MAMAuF,IAMAC,IAMAV,WAMAY,cAMAC,cAMAC,kBAMAC,WAMAC,UAMAC,kBAEA1H,aAAe,CACd2B,OAAO,EACPuF,KAAK,EACLC,KAAK,EACLV,WAAY,CAACnF,UAAW,eACxB+F,cAAe,CAAC9F,KAAMC,SACtB8F,cAAe,CAAC/F,KAAMC,SACtB+F,kBAAmB,CAACjG,UAAW,sBAC/BkG,WAAY,CAAClG,UAAW,eACxBmG,WAAW,EACXC,kBAAmB,CAACpG,UAAW,uBAGrBqG,gCACV,OAAOvG,OAAOC,QAAQb,KAAKS,OAAO2G,KACjC,EAAE/F,EAAMV,KAAaA,GAA4B,iBAAXA,GAAuBA,EAAOG,WAAcO,GAEnF,CAED7B,gBAAkB,CACjByG,WAAY,EACZS,IAAK,EACLC,IAAK,EACLG,eAAe,EACfC,kBAAmB,IACnBF,eAAe,EACfG,WAAY,aACZC,UAAW,iBACXC,kBAAmB,KAQpBrH,YAAYwH,EAAO,IAqBlB,IAAIC,EApBJxH,QAEAc,OAAO2G,iBACNvH,KACAY,OAAO4G,KAAKZ,EAAenG,OAAOgH,QACjC,CAACC,EAAahH,KACbgH,EAAYhH,GAAQ,CACnBiH,MACC,OAAO3H,KAAK4H,KAAKlH,EACjB,EACDmH,IAAIC,GACH9H,KAAK8B,KAAKpB,EAAMoH,EAChB,GAEKJ,IAER,CAAE,IAQJJ,EAAsC,mBAFtCD,EAAO,IAAIT,EAAemB,YAAaV,IAEhBL,WAAiC,GAAK,EAE7DhH,KAAKgI,MAAQ,CACZ9F,MAAO+F,EAASjI,KAAKD,WAAY,IAAK,KACtCoB,MAAO,GAERnB,KAAKgI,MAAM9F,MAAMS,IAAIZ,aAAa,QAAS,QAC3C/B,KAAKgI,MAAM9F,MAAMS,IAAIZ,aAAa,OAAQ,QAC1C/B,KAAKgI,MAAM9F,MAAMS,IAAIZ,aAAa,OAAQ,eAC1C/B,KAAKgI,MAAME,OAASlI,KAAKgI,MAAM9F,MAAMY,QAAQ,UAAUhB,KAAK,CAC3DqG,MAAO,SACPC,KAAM,SACNrC,GAAI,GACJC,GAAI,GACJN,EAAG,GAAK4B,EAAkB,EAC1B,eAAgBA,IAEjBtH,KAAKgI,MAAMK,OAASrI,KAAKgI,MAAM9F,MAAMY,QAAQ,QAAQhB,KAAK,CACzD+B,EAAGiC,EAAe,GAAI,GAAI,GAAKwB,EAAkB,EAAG,EAAG,GACvDa,MAAO,QACPC,KAAM,QACN,eAAgBd,IAEjBtH,KAAKgI,MAAMM,KAAOtI,KAAKgI,MAAM9F,MAAMY,QAAQ,OAAQ,CAClDqF,MAAO,OACPC,KAAM,OACNxC,EAAG,GACHC,EAAG,KAEJ7F,KAAKuI,YACL3H,OAAO4G,KAAKZ,EAAenG,OACzB+H,SAAQlF,GAAOA,KAAO+D,GAAQrH,KAAKyI,KAAKnF,EAAK+D,EAAK/D,KACpD,CAGDpC,iBAAiBG,EAAMO,GACtB5B,KAAKyI,KAAKpH,EAAMO,EAChB,CAEDmB,GAAS,CAAE,EAQXjB,KAAKiB,GACJ,IAAI,CAAC,SAAU,UAAU2F,gBAAgB3F,GACxC,MAAM,IAAI4F,UAAU,+DAA+D5F,MAGpF,GAAoB,iBAAVA,EAAoB,CAC7B,GAAwB,IAArB6F,UAAUC,OACZ,OAAO7I,KAAK4H,KAAK7E,GAElBA,EAAQ,CAAC,CAACA,EAAO6F,UAAU,IAC3B,CAOD,OALIE,MAAMC,QAAQhG,KACjBA,EAAQnC,OAAO4G,KAAKzE,GAAOqE,KAAI9D,GAAO,CAACA,EAAKP,EAAMO,OAGnDP,EAAMyF,SAAQ,EAAElF,EAAKnC,KAAWnB,KAAKyI,KAAKnF,EAAKnC,KACxCnB,IACP,CAMD4H,KAAKtE,GAEJ,OADAtD,KAAKgJ,cACEhJ,MAAK+C,EAAOO,EACnB,CASDmF,KAAKnF,EAAKwE,GAET,QAAWzE,KADXyE,EAAM9H,KAAKiJ,aAAa3F,EAAKwE,IACP,MAAM,IAAIa,UAAU,qBAAqBrF,mEAC/DtD,KAAKkJ,gBAAgB5F,EAAKwE,EAC1B,CAKDqB,GAAS,KAKTC,eAAiB,KAOjBF,gBAAgB5F,EAAKwE,GAChB9H,MAAKmJ,IACRnJ,MAAKmJ,EAAS,GACdnJ,KAAKoJ,eAAiBC,QAAQC,UAAUC,MAAK,IAAMvJ,KAAKgJ,iBAEzDhJ,MAAKmJ,EAAO7F,GAAOwE,CACnB,CAEDkB,cACC,IAAKhJ,MAAKmJ,EACT,OAED,MAAMA,EAAQnJ,MAAKmJ,EACnBnJ,MAAKmJ,EAAS,KAEd,IAAIzC,EAAMyC,EAAMzC,KAAO1G,MAAK+C,EAAO2D,IAC/BC,EAAMwC,EAAMxC,KAAO3G,MAAK+C,EAAO4D,IAEhC,QAASwC,GAASA,EAAMzC,KAAOC,IACjCD,EAAMyC,EAAMzC,IAAMC,GAEhB,QAASwC,GAASA,EAAMxC,KAAOD,IACjCC,EAAMwC,EAAMxC,IAAMD,GAEhB,UAAWyC,KAAWA,EAAMrC,eAAiB9G,MAAK+C,EAAO+D,iBACjD,MAAPJ,GAAeyC,EAAMhI,MAAQuF,IAAKyC,EAAMhI,MAAQuF,GACzC,MAAPC,GAAewC,EAAMhI,MAAQwF,IAAKwC,EAAMhI,MAAQwF,IAGpD,IAAK,MAAOrD,EAAKwE,KAAQlH,OAAOC,QAAQsI,GACvC,GAAGnJ,MAAK+C,EAAOO,KAASwE,EAAxB,CAWA,GARA9H,MAAK+C,EAAOO,GAAOwE,EAChBxE,KAAOmD,SACEpD,IAARyE,EAAmB9H,KAAKgI,MAAM9F,MAAMS,IAAIZ,aAAa0E,EAAUnD,GAAMwE,GACnE9H,KAAKgI,MAAM9F,MAAMS,IAAIX,gBAAgByE,EAAUnD,KAElD,CAAC,MAAO,MAAO,iBAAiBoF,SAASpF,KAAStD,KAAKmB,MAAQnB,KAAK2G,KAAO3G,KAAKmB,MAAQnB,KAAK0G,OAC/F1G,KAAKmB,MAAQwD,KAAK+B,IAAI1G,KAAK2G,IAAKhC,KAAKgC,IAAI3G,KAAK0G,IAAK1G,KAAKmB,SAE9C,eAARmC,EAAsB,CACxBtD,KAAKuI,YACL,MAAMjB,EAA0B,kBAARQ,EAA0B,GAAK,EACvD9H,KAAKgI,MAAMK,OAAOvG,KAAK,eAAgBwF,GACvCtH,KAAKgI,MAAME,OAAOpG,KAAK,eAAgBwF,EACvC,CACDtH,KAAK6B,uBAAuByB,EAf3B,CAiBFtD,KAAKwJ,aACL,CASDP,aAAa3F,EAAKwE,GACjB,OAAOxE,GACN,IAAK,QACL,IAAK,MACL,IAAK,MACJwE,EAAM2B,OAAO3B,GACT2B,OAAOC,SAAS5B,KAAMA,OAAMzE,GAChC,MACD,IAAK,aACJyE,EAAM2B,OAAO3B,GAERA,EADD2B,OAAOC,SAAS5B,GACTnD,KAAKgC,IAAI,EAAGhC,KAAK+B,IAAI,IAAKoB,SADLzE,EAEhC,MACD,IAAK,gBACL,IAAK,gBACJyE,IAAQA,EACR,MACD,IAAK,oBACJA,EAAM7F,OAAO6F,GACb,MACD,IAAK,aACJ,GAAkB,mBAARA,IAAuB,CAAC,gBAAiB,aAAc,WAAY,UAAW,QAAS,QAAQY,SAASZ,GACjH,MAAM,IAAI6B,MAAM,kFAAkF7B,4CAEnG,MACD,IAAK,YACJ,GAAkB,iBAARA,GAAmC,mBAARA,EACpC,MAAM,IAAIa,UAAU,6GAA6Gb,aAElI,GAAkB,iBAARA,GAA4B,SAARA,IAAmBtE,EAAQsE,GACxD,MAAM,IAAI6B,MAAM,mEAAmE7B,0CAItF,OAAOA,CACP,CASD8B,cAAczI,EAAQnB,KAAKmB,OAC1B,OAAOwD,KAAK+B,IACX,IACA/B,KAAKgC,IACJ,GACCxF,EAAQnB,KAAK0G,MAAQ1G,KAAK2G,IAAM3G,KAAK0G,KAAO,KAG/C,CAODmD,mBACC,MAAO,CAAC,QAAS,MAAO,OAAOC,MAAKxG,GAA4B,iBAAdtD,KAAKsD,IACvD,CAWDyG,mBAAmBpE,EAAOD,GACzB,MAAMsE,EAASvE,EAAiBC,EAAGC,GACnC3F,KAAKgI,MAAMiC,QAAQnI,KAAK,CAAC8D,EAAG,GAAKoE,EAAOpE,EAAGC,EAAG,GAAKmE,EAAOnE,GAC1D,CAMD0C,YACC,MAAM2B,EAASlK,KAAKgH,WAwBpB,OAvBAhH,KAAKgI,MAAMM,KAAKtF,QAAQ,IACF,iBAAXkH,GAAuB,CAAC,gBAAiB,aAAc,YAAYxB,SAASwB,KACtFlK,KAAKgI,MAAMiC,QAAUjK,KAAKgI,MAAM9F,MAAMY,QACrC,QACA,CAACqF,MAAO,aAAcC,KAAM,cAC5B,GACApI,KAAKgI,MAAMM,MAER,CAAC,aAAc,YAAYI,SAASwB,KACvClK,KAAKgI,MAAMmC,cAAgBnK,KAAKgI,MAAM9F,MAAMY,QAC3C,QACA,CAACqF,MAAO,iBAAkBC,KAAM,kBAChC,GACApI,KAAKgI,MAAMM,OAGbtI,KAAKgI,MAAMoC,QAAUpK,KAAKgI,MAAM9F,MAAMY,QACrC,QACA,CAACqF,MAAO,WAAYC,KAAM,YAC1B,GACApI,KAAKgI,MAAMM,OAGN4B,GACP,IAAK,gBACJlK,KAAKgI,MAAMiC,QAAQnI,KAAK,CACvB8D,EAAG,EACHC,EAAG,EACHwE,GAAI,UAELrK,KAAKgI,MAAMoC,QAAQtI,KAAK,CACvB8D,EAAG,GACHC,EAAG,GACHwE,GAAI,UAEL,MAED,IAAK,aACJrK,KAAKgI,MAAMmC,cAAcnH,QAAQ,KACjC,MAED,IAAK,WACJhD,KAAKgI,MAAMiC,QAAQnI,KAAK,CAAC8D,EAAG,GAAIyE,GAAI,YACpCrK,KAAKgI,MAAMmC,cAAcrI,KAAK,CAAC8D,EAAG,GAAIyE,GAAI,UAAUrH,QAAQ,OAC5DhD,KAAKgI,MAAMoC,QAAQtI,KAAK,CAAC8D,EAAG,GAAIyE,GAAI,UAGrCrK,KAAKgI,MAAMM,KAAKxG,KAAK,KAAiB,aAAXoI,EAAwB,GAAK,QACxD,CAKDI,GAAY,KAMZd,cACC,MAAMvD,EAAajG,KAAKiG,WAAa,GAC/BP,EAAI1F,KAAKuK,YAGf,GADAvK,MAAKsK,GAAWE,SACZxK,KAAK6J,mBAgBR7J,KAAKyK,YAAYzK,KAAKmB,MAAO8E,EAAYP,OAhBb,CAC5B,MAAMQ,GAAalG,KAAK6G,cACxB,IAAIlB,EAAQ3F,KAAK4J,gBACjB5J,KAAKgI,MAAME,OAAOpG,KAAK,IAAK4D,GACN,SAAnB1F,KAAKiH,WAAwBjH,KAAKmB,QAAUnB,KAAKgI,MAAM7G,MACzDnB,MAAKsK,EFhcQ,SAASI,EAAQC,EAAYC,EAAaC,EAAKC,GAC/D,MAAMC,EAA6B,iBAAXL,EAAsBlH,EAAQkH,GAAUA,EAChE,IAAIM,EACAC,EAEJ,MAAMC,EAAQ,SAASxH,GAClBsH,IAAQA,EAAStH,GACrBA,GAAKsH,EACLtH,EAAIiB,KAAK+B,IAAIhD,EAAGmH,GAChB,MAAMM,EAASJ,EAASrH,EAAGiH,EAAYC,EAAaC,GACpDC,EAAGK,GACAzH,EAAImH,EAAKI,EAAaG,sBAAsBF,GAC1CJ,EAAGH,EAAaC,EACvB,EAIC,OAFAK,EAAaG,sBAAsBF,GAE5B,CACNV,OAAQ,KACPa,qBAAqBJ,EAAW,EAGnC,CE0aqBX,CAAStK,KAAKiH,UAAWjH,KAAKgI,MAAM7G,MAAOnB,KAAKmB,MAAQnB,KAAKgI,MAAM7G,MAAOnB,KAAKkH,mBAAmB/F,IAClHwE,EAAQ3F,KAAK4J,cAAczI,GAC3BnB,KAAKgI,MAAMK,OAAOvG,KAAK,IAAKgE,EAAe,GAAI,GAAIJ,EAAGO,EAAYN,EAAOO,IACzElG,KAAKyK,YAAYtJ,IAAUnB,KAAKmB,MAAQA,EAAQwD,KAAK2G,MAAMnK,IAAS,EAAI8E,EAAaN,GAAS,EAAGD,EAAE,KAGpG1F,KAAKgI,MAAMK,OAAOvG,KAAK,IAAKgE,EAAe,GAAI,GAAIJ,EAAGO,EAAYN,EAAOO,IACzElG,KAAKyK,YAAYzK,KAAKmB,OAAQ,EAAI8E,EAAaN,GAAS,EAAGD,IAE5D1F,KAAKgI,MAAM7G,MAAQnB,KAAKmB,KAC3B,CAGE,CAKDsJ,YAAYtJ,EAAOwE,EAAOD,GACzB,GAA8B,mBAApB1F,KAAKgH,WAKf,OAAQhH,KAAKgH,YACZ,IAAK,QACJhH,KAAKgI,MAAMM,KAAKpF,GAAG3C,iBAAyB8C,IAAVlC,EAAsBA,EAAQnB,KAAK+G,kBACrE,MACD,IAAK,UACJ/G,KAAKgI,MAAMM,KAAKpF,GAAG3C,kBAAyB8C,IAAVlC,GAAmC,MAAZnB,KAAK2G,IAAchC,KAAK2G,MAAMnK,EAAQnB,KAAK2G,IAAM,KAAO3G,KAAK+G,mBAAqB,IAC3I,MACD,IAAK,OACJ/G,KAAKgI,MAAMM,KAAKpF,GAAG3C,YAAc,GACjC,MACD,QACCP,KAAKgI,MAAMiC,QAAQ/G,GAAG3C,iBAAwB8C,IAAVlC,EAAsBA,EAAQnB,KAAK+G,kBACvE/G,KAAKgI,MAAMoC,QAAQlH,GAAG3C,iBAA2B8C,IAAbrD,KAAK2G,IAAoB3G,KAAK2G,IAAM3G,KAAK+G,kBACtD,kBAApB/G,KAAKgH,YACPhH,KAAK+J,mBAAmBpE,EAAOD,QAlBjC1F,KAAKgI,MAAMM,KAAKtF,QAAQhD,KAAKgH,WAAW7F,EAAOnB,KAAK2G,KAqBrD,CAOD4D,YACC,OAAO,GAAK5F,KAAKgC,IAChB3G,KAAKuL,gBAAgBvL,KAAKgI,MAAME,OAAOhF,IACvClD,KAAKuL,gBAAgBvL,KAAKgI,MAAMK,OAAOnF,KACpC,CACJ,CAKDqI,gBAAgBrI,GACf,OAAOuG,OAAO+B,WAAWxL,KAAKyL,cAAcC,aAAaC,iBAAiBzI,GAAI,iBAAmB,EACjG,EAIF0I,eAAeC,OAAO,kBAAmBjF"}